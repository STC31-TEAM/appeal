#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2.1

orbs:
  telegram: woltsu/telegram@0.0.9
  sonarcloud: sonarsource/sonarcloud@1.0.2

jobs:
  build:
    environment:
      # Configure the JVM and Gradle to avoid OOM errors
      _JAVA_OPTIONS: "-Xmx3g"
      GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2"

    docker:
      # specify the version you desire here
      - image: circleci/openjdk:11.0.3-jdk-stretch

    steps:
      - checkout
      - restore_cache:
          key: v1-gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
      - restore_cache:
          key: v1-gradle-cache-{{ checksum "build.gradle" }}
      - run:
          name: chmod permissions
          command: chmod +x ./gradlew
      - run:
          name: Install dependencies
          command: ./gradlew build -x test
      - save_cache:
          paths:
            - ~/.gradle/wrapper
          key: v1-gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
      - save_cache:
          paths:
            - ~/.gradle/caches
          key: v1-gradle-cache-{{ checksum "build.gradle" }}
      - persist_to_workspace:
          root: .
          paths:
            - build
  test:
    environment:
      # Configure the JVM and Gradle to avoid OOM errors
      _JAVA_OPTIONS: "-Xmx3g"
      GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2"
    docker:
       - image: circleci/openjdk:11.0.3-jdk-stretch
    steps:
      - checkout
      - attach_workspace:
           at: .
      - run:
          name: chmod permissions
          command: chmod +x ./gradlew
      - run:
          name: Run tests
          command:
            ./gradlew test
      - run:
          name: Generate code coverage report
          command:
            ./gradlew jacocoTestReport
      - store_test_results:
          path: build/test-results/test
      - store_artifacts:
          path: build/test-results/test
          when: always
      - store_artifacts:
          path: build/reports/jacoco/test
          when: always
      - run:
          name: Assemble JAR
          command: |
            # Skip this for other nodes
            if [ "$CIRCLE_NODE_INDEX" == 0 ]; then
              ./gradlew assemble
            fi
      # This will be empty for all nodes except the first one
      - store_artifacts:
          path: build/libs
      - sonarcloud/scan
      - telegram/notify:
          message: "Build and test"

workflows:
  main:
    jobs:
      - build:
          context: sonarcloud
      - test:
          requires:
            - build